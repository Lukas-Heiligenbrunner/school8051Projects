C51 COMPILER V9.53.0.0   F330_SUB                                                          01/25/2019 09:15:18 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE F330_SUB
OBJECT MODULE PLACED IN F330_sub.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE F330_sub.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // template.c
   3          //-----------------------------------------------------------------------------
   4          // HTBLA Steyr  -  Elektronik und Technische Informatik
   5          // 
   6          // Author:   Felix Hutsteiner
   7          // Version:  1.0
   8          // 
   9          // Changes:  
  10          //          5.2.2014  created     
  11          //
  12          //
  13          // Target:         C8051F330 Silabs
  14          // Tool chain:     Keil µVision 4 
  15          //
  16          // Program Description:
  17          //      This program is a template for c51 subfunction modules
  18          //
  19          
  20          
  21          //-----------------------------------------------------------------------------
  22          // Includes
  23          //-----------------------------------------------------------------------------
  24          #include <stdio.h>
  25          #include <C8051F330.h>      // SFR declaration
  26          
  27          #define HARDWARE 1
  28          
  29          
  30          //-----------------------------------------------------------------------------
  31          // Global Constants
  32          //-----------------------------------------------------------------------------
  33          
  34          
  35          //-----------------------------------------------------------------------------
  36          // Global Variables
  37          //-----------------------------------------------------------------------------
  38          
  39          //-----------------------------------------------------------------------------
  40          // Function Prototypes
  41          //-----------------------------------------------------------------------------
  42          void  serielle_Eingabe (void);
  43          void writeSerial (char out);
  44          void writeInt(int out);
  45          void printMainMenu();
  46          void string_Print(char  mystring[]);
  47          
  48          //-----------------------------------------------------------------------------
  49          // Functions
  50          //-----------------------------------------------------------------------------
  51          
  52          char uart_in;
  53          sbit led_pin = P1^3;
  54          int max_lengh=100;  
  55          
C51 COMPILER V9.53.0.0   F330_SUB                                                          01/25/2019 09:15:18 PAGE 2   

  56          int tempint;
  57          int stellennr;
  58          
  59          
  60          
  61          int setmenu = 0;
  62          int freqmenu = 0;
  63          char percentchar[3];
  64          int percent = 100;
  65          
  66          char tempintarr[9];
  67          
  68          char mainMenChar[80] = "\nMain menu:\n[d] --> duty cycle setzen \n[f] --> pwm frequenz setzen";
  69          
  70          //UART ISR
  71          void  serielle_Eingabe (void) interrupt 4{
  72   1        if(RI0){ // check if interrupt ist triggered by user input
  73   2          uart_in = SBUF0;
  74   2          RI0 = 0;
  75   2          
  76   2          writeSerial(uart_in); // give user a feedback
  77   2          if(setmenu == 1) // menu to set duty is active
  78   2          {
  79   3            if(uart_in == 'c')
  80   3            {
  81   4              setmenu = 0;
  82   4              string_Print("Exited cycle menu!\n");
  83   4              printMainMenu();
  84   4            }else if(uart_in == 13){ //typed in enter to confirm the percent
  85   4            
  86   4            percent=0;
  87   4            if(percentchar[0] != 0 && percentchar[1] == 0 )
  88   4            {
  89   5              percent = percentchar[0]-'0';
  90   5              writeSerial(percentchar[0]);
  91   5            }else if(percentchar[0] != 0 && percentchar[1] != 0)
  92   4            {
  93   5              percent = (percentchar[0]-'0')*10+(percentchar[1]-'0');
  94   5            }
  95   4            percentchar[0]=0;
  96   4            percentchar[1]=0;
  97   4            percentchar[2]=0;
  98   4            
  99   4            string_Print("You selected: ");
 100   4            writeInt(percent);
 101   4            printMainMenu();
 102   4            setmenu =0;
 103   4            
 104   4          }else { // confirm automatically after 3 numbers
 105   4              
 106   4              if(percentchar[0] == 0)
 107   4              {
 108   5                percentchar[0] = uart_in;
 109   5              } else if(percentchar[1] == 0){
 110   5                percentchar[1] = uart_in;
 111   5              } else{
 112   5                percentchar[2] = uart_in;
 113   5                percent = (percentchar[0]-'0')*100+(percentchar[1]-'0')*10+(percentchar[2]-'0');
 114   5                percentchar[0]=0;
 115   5                percentchar[1]=0;
 116   5                percentchar[2]=0;
 117   5                
C51 COMPILER V9.53.0.0   F330_SUB                                                          01/25/2019 09:15:18 PAGE 3   

 118   5                if(percent > 100)
 119   5                {
 120   6                  percent = 100;
 121   6                }
 122   5                
 123   5                string_Print("You selected: ");
 124   5                writeInt(percent);
 125   5                printMainMenu();
 126   5                
 127   5                setmenu =0;
 128   5              }
 129   4            }
 130   3            
 131   3          }else if(freqmenu == 1){ //menu to set freqiem
 132   3            //todo frequency selection
 133   3            if(uart_in == 'c')//typed in enter to confirm the percent
 134   3            {
 135   4              freqmenu = 0;
 136   4              string_Print("Exited cycle menu!\n");
 137   4              printMainMenu();
 138   4            }else if(uart_in == 13){
 139   4            string_Print("Exited cycle menu!\n");
 140   4            printMainMenu();
 141   4            freqmenu =0;
 142   4            
 143   4          }
 144   3          
 145   3          }else{// confirm automatically after 3 numbers
 146   3            if(uart_in == 'd')
 147   3            {
 148   4              setmenu=1;
 149   4              string_Print("\n Welcome to the duty cycle set menu: exit with c or set set in %\n:");
 150   4            }else if(uart_in == 'f')
 151   3            {
 152   4              freqmenu=1;
 153   4              string_Print("\n Welcome to the freqmenu menu: exit with c or set set in %\n:");
 154   4            }
 155   3          }
 156   2        }
 157   1      }
 158          
 159          void writeSerial (char out){ //write a serial char
 160   1        while(!TI0);
 161   1        SBUF0=out;
 162   1        TI0=0;
 163   1      }
 164          
 165          void printMainMenu() // function to print the main menu
 166          {
 167   1        string_Print(mainMenChar);
 168   1      }
 169          
 170          void writeInt(int out){ // todo to print right order
 171   1        tempint = out;
 172   1        if(tempint == 0)
 173   1        {
 174   2          writeSerial(0+ '0');
 175   2        }
 176   1        while(tempint > 0){
 177   2          writeSerial((tempint%10) + '0');
 178   2          tempint = tempint/10;
 179   2        }
C51 COMPILER V9.53.0.0   F330_SUB                                                          01/25/2019 09:15:18 PAGE 4   

 180   1      }
 181          
 182          void string_Print(char  mystring[]) // function to print a whole string
 183          {
 184   1        int i =0;
 185   1        for(i=0;mystring[i] != 0 ;i++)
 186   1        {
 187   2          writeSerial(mystring[i]);
 188   2        }
 189   1      }
 190          
 191          
 192          
 193          int count;
 194          void  Timer (void) interrupt 1{
 195   1        if(count < percent){ // check if current value is in duty cycle
 196   2          led_pin = !HARDWARE;
 197   2        }else if(count > percent){ // if current > duty cycle turn off led
 198   2          led_pin = HARDWARE;
 199   2        }
 200   1        count++;
 201   1        if(count > 100){ // reset counter
 202   2        count = 0;
 203   2        }
 204   1      }
 205          //-----------------------------------------------------------------------------
 206          // End Of File
 207          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    642    ----
   CONSTANT SIZE    =    165    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    107       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
