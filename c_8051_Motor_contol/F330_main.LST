C51 COMPILER V9.53.0.0   F330_MAIN                                                         01/29/2019 14:45:09 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE F330_MAIN
OBJECT MODULE PLACED IN F330_main.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE F330_main.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - TABS(2)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // template.c
   3          //-----------------------------------------------------------------------------
   4          // HTBLA Steyr  -  Elektronik und Technische Informatik
   5          // 
   6          // Author:   Felix Hutsteiner
   7          // Version:  1.0
   8          // 
   9          // Changes:  
  10          //          5.2.2014  created     
  11          //
  12          //
  13          // Target:         C8051F330 Silabs
  14          // Tool chain:     Keil µVision 4 
  15          //
  16          // Program Description:
  17          //
  18          //      This program is a template for c51 main modules
  19          //
  20          
  21          
  22          //-----------------------------------------------------------------------------
  23          // Includes
  24          //-----------------------------------------------------------------------------
  25          
  26          #include <C8051F330.h>      // SFR declaration
  27          #include <stdio.h>
  28          
  29          //-----------------------------------------------------------------------------
  30          // Global Constants
  31          //-----------------------------------------------------------------------------
  32          
  33          
  34          //-----------------------------------------------------------------------------
  35          // Global Variables
  36          //-----------------------------------------------------------------------------
  37          
  38          sbit motor_r = P0^0;      // 1: Motoranschluss für Rechtslauf an +UB, 0: ... Masse
  39          sbit motor_l = P0^1;      // 1: Motoranschluss für Linkslauf an +UB, 0: ... Masse
  40          sbit fb_inh = P1^2;       // 1: Motorbrücke aktiviert, 0: Motorbrücke gesperrt
  41          
  42          // Achtung: für Rechtslauf muss motor_l auf 0 sein, und umgekehrt !!!!!!!!!
  43          
  44          
  45          
  46          //-----------------------------------------------------------------------------
  47          // Function Prototypes
  48          //-----------------------------------------------------------------------------
  49          
  50          extern void init_device();
  51          extern void writeSerial(char out);
  52          extern void string_Print(char mystring[]);
  53          
  54          
C51 COMPILER V9.53.0.0   F330_MAIN                                                         01/29/2019 14:45:09 PAGE 2   

  55          
  56          //-----------------------------------------------------------------------------
  57          // main() Routine
  58          //-----------------------------------------------------------------------------
  59          
  60          void main (void) small {
  61   1        
  62   1        PCA0MD &= 0xbf;         // Watchdogtimer abschalten
  63   1      
  64   1        init_device();          // Init laut Config-Tool
  65   1        
  66   1        EA=1;                   //alle interrupts aktivieren
  67   1        ET0=1;                  //enable Timer 0
  68   1        ES0=1;      
  69   1        TR0=1;                  //TimerRunflag setzen um den Timer zu starten
  70   1        TI0=1; //Timer Interrupt aktivieren
  71   1        
  72   1        
  73   1        //fb_inh = 1;
  74   1        //motor_r = 1;
  75   1        //motor_l = 0;
  76   1        
  77   1        string_Print("[l] --> links laufen 100%\n[r] --> rechts laufen 100% \n[p] --> auslaufen lassen\n[s] --> h
             -art stoppen\n[d] --> duty cicle optionen");
  78   1        
  79   1        while (1) {
  80   2          // main loop code
  81   2         }
  82   1      }
  83          
  84          
  85          //-----------------------------------------------------------------------------
  86          // End Of File
  87          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     27    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
